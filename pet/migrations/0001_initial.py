# Generated by Django 5.2.5 on 2025-08-26 05:39

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bill', '0001_initial'),
        ('price', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='分类名称')),
                ('icon', models.URLField(verbose_name='分类图标')),
                ('sort_order', models.IntegerField(default=0, verbose_name='排序')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='宠物名称')),
                ('breed', models.CharField(max_length=100, verbose_name='品种')),
                ('age', models.IntegerField(verbose_name='年龄(月)')),
                ('gender', models.CharField(choices=[('M', '雄性'), ('F', '雌性')], max_length=1)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='体重(kg)')),
                ('color', models.CharField(max_length=50, verbose_name='毛色')),
                ('avatar', models.URLField(blank=True, null=True)),
                ('personality', models.TextField(verbose_name='性格特点')),
                ('health_status', models.TextField(verbose_name='健康状况')),
                ('vaccination_record', models.TextField(verbose_name='疫苗记录')),
                ('special_notes', models.TextField(blank=True, null=True, verbose_name='特殊说明')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user', verbose_name='主人')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pet.petcategory', verbose_name='宠物分类')),
            ],
        ),
        migrations.CreateModel(
            name='PetDiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('images', models.JSONField(blank=True, default=list, verbose_name='图片列表')),
                ('videos', models.JSONField(blank=True, default=list, verbose_name='视频列表')),
                ('diary_date', models.DateField(default=django.utils.timezone.now, verbose_name='日记日期')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diaries', to='pet.pet', verbose_name='宠物')),
            ],
        ),
        migrations.CreateModel(
            name='PetServiceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_title', models.CharField(max_length=100, verbose_name='服务标题')),
                ('service_content', models.TextField(verbose_name='服务内容描述')),
                ('service_start_time', models.DateTimeField(verbose_name='服务开始时间')),
                ('service_end_time', models.DateTimeField(verbose_name='服务结束时间')),
                ('service_duration', models.IntegerField(verbose_name='服务时长(分钟)')),
                ('pet_condition_before', models.TextField(verbose_name='服务前宠物状况')),
                ('pet_condition_after', models.TextField(verbose_name='服务后宠物状况')),
                ('pet_behavior_notes', models.TextField(blank=True, null=True, verbose_name='宠物行为记录')),
                ('service_result', models.TextField(verbose_name='服务结果')),
                ('professional_recommendations', models.TextField(blank=True, null=True, verbose_name='专业建议')),
                ('next_service_suggestion', models.TextField(blank=True, null=True, verbose_name='下次服务建议')),
                ('before_images', models.JSONField(blank=True, default=list, verbose_name='服务前照片')),
                ('after_images', models.JSONField(blank=True, default=list, verbose_name='服务后照片')),
                ('process_videos', models.JSONField(blank=True, default=list, verbose_name='服务过程视频')),
                ('special_notes', models.TextField(blank=True, null=True, verbose_name='特殊说明')),
                ('customer_feedback', models.TextField(blank=True, null=True, verbose_name='客户反馈')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_records', to='pet.pet', verbose_name='宠物')),
                ('related_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bill.serviceorder', verbose_name='关联订单')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user', verbose_name='服务提供者')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='price.service', verbose_name='服务类型')),
            ],
        ),
    ]
